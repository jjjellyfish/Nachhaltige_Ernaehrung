---
title: "Score Nachhaltige Ernährung"
author: "IGES Institut"
format: html
editor: visual
toc: true
---

```{r setup}
#| message: false
#| warning: false
library(tidyverse)
library(haven) #Einlesen von .sav oder .dta
library(xlsx)
library(knitr)
library(kableExtra)

library(lavaan)
```


# 0. Prep
```{r data}
# Datensatz mit Meta-Infos zu den Items
items <- read.xlsx('./data/Items.xlsx', sheetIndex = 1)


# Daten aus AOK-Familienstudie
overall_dat <- read_dta('./data/AOK_Datensatz.dta')
#names(overall_dat)

dat <- overall_dat %>% select(lfdn, v_309:v_318, 
                              contains('Ernährungskompetenz'), 
                              v_319:v_371)
```

Vorgehen: 

* zunächst werden Punkte gemäß der jeweiligen Skala vergeben
* im nächsten Schritt werden Items auf eine gemeinsame Skala zwischen 0 & 1 transformiert (siehe hierfür https://www.ibm.com/support/pages/transforming-different-likert-scales-common-scale)
* der Nachhaltigkeitsscore wird für jede Person von 0 bis 100 ausgegeben


```{r sust}
# Itemauswahl
items_auswahl <- items %>% filter(eignung_score %in% c('ja', 'vielleicht')) %>% na.omit()
sust <- dat %>% select(lfdn, any_of(items_auswahl$item_nr))
```





# 1. Score bilden

## 1.1 Kodierung einzelner Bereiche
Punkte für die jeweiligen Antworten vergeben --> Sortierung nach Bereichen (ersteinmal so wie sie in der Auswahl vom 28.10. festegelgt wurden)

### 1.1.1 Einstellung / Bedeutung

```{r}
#| label: kodierung_einstellung
# Diagnostik von haven_labelled-Objekten
# check <- labelled::look_for(tmp)

### Frage 7.2: Welche Aspekte sind Ihnen am Essen am wichtigsten?
sust$v_325[sust$v_325 == 6] <- NA
sust <- sust %>% select(-v_322, -v_323, -v_324, -v_326)

table(sust$v_325)

### Frage 7.9: Welche Hindernisse für klimafreundliche Ernährung? (invertiert)
sust <- sust %>% 
  mutate(v_352_357 = rowSums(select(., v_352:v_357)),
         v_352_357 = ifelse(v_352_357==0 & v_358==0, NA, v_352_357)) %>% 
  select(-(v_352:v_358))

### restliche Items ohne Veränderungen
ids <- c('v_359', 'v_364', 'v_365')

sust <- sust %>% 
  mutate_all(as.numeric) %>%
  mutate(across(any_of(ids), ~na_if(.,0)))
```


### 1.1.2 Wissen /Fertigkeiten
```{r}
#| label: kodierung_wissen

### Frage 7.4: klimaschädlichstes Lebensmittel (Wissensfrage)
#labelled::look_for(sust)
sust <- sust %>% mutate(
  v_333 = case_when(
    v_333 == 1 ~ 3, 
    v_333 %in% c(2,3,5) ~ 2, 
    v_333 == 4 ~ 1, 
    v_333 == 0 ~ as.double(NA)
  )
)

### restliche Items ohne Verädnerungen
ids <- c('v_321', 'v_327', 'v_328', 'v_330', 'v_331', 'v_332', 'v_360')

sust <- sust %>% 
  mutate(across(any_of(ids), ~na_if(.,0)))
```



### 1.1.3 Verhalten
```{r}
#| label: kodierung_verhalten

### Frage 7.7: Wie ernähren Sie sich und ihr Kind?
tmp <- sust %>% select(v_336:v_345) %>% 
  mutate_all(as.factor) 

sust <- sust %>% mutate(
  ern_erw = case_when(
    v_336 == 1 ~ 1,
    v_338 == 1 ~ 2,
    v_340 == 1 ~ 3,
    v_342 == 1 ~ 4,
    v_344 == 1 ~ 5,
  ), 
    ern_kid = case_when(
    v_337 == 1 ~ 1,
    v_339 == 1 ~ 2,
    v_341 == 1 ~ 3,
    v_343 == 1 ~ 4,
    v_345 == 1 ~ 5,
  ),
) %>% 
  select(-(v_336:v_345))


### restliche Items ohne Veränderungen
ids <- c('v_329', 'v_334', 'v_335', 'v_346', 'v_347', 'v_348', 'v_349', 'v_350', 'v_351', 'v_366')

sust <- sust %>% 
  mutate(across(any_of(ids), ~na_if(.,0)))
```


**Item-Datensatz vervollstäbdigen**
```{r}
#| label: add_item_descriptions
#names(items)
items <- items %>% 
  add_row(item_nr='v_352_357', item='Wie viele Hindernisse für eine klima-/umweltfreundliche Ernährung werden genannt?', bereich='Hindernisse', bereich_neu='Einstellung / Bedeutung') %>% 
  add_row(item_nr='ern_erw', item='Wie ernähren Sie sich?', bereich='Verhalten', bereich_neu='Verhalten') %>%
  add_row(item_nr='ern_kid', item='Wie ernähren Sie Ihr Kind?', bereich='Verhalten', bereich_neu='Verhalten')
```


##### TO DO!!!
```{r diag}
check <- dlookr::diagnose(sust)
check <- dlookr::diagnose_numeric(sust)
```


## 1.2 Transformation & Invertierung
**Transformation** <br>
Da die Items auf Antwortskalen mit unterschiedlich vielen Ausprägungen zu beantworten sind, müssen diese vor einer Zusammenführung zunächst auf eine einheitliche Skala transformiert werden. Dabei soll die minmale Ausprägung 0 und die maximale Ausprägung 1 sein. 

```{r}
#| label: transformation
transform_scale <- function(x) {
  (x - min(x, na.rm = TRUE)) /  (max(x, na.rm=TRUE) - min(x, na.rm = TRUE))
}

sust <- sust %>% 
  mutate_all(as.numeric) %>% 
  mutate(across(v_321:ern_kid, transform_scale))

### check
check <- dlookr::diagnose(sust)
check <- dlookr::diagnose_numeric(sust)
```


**Invertierung** <br>
Die Items sollen so kodiert sein, dass ein hoher numerischer Wert (Max 1) mit maximal nachhaltiger Ernährung einhergeht. Ein niedriger Wert (Min 0) bedeutet umgekehrt eine wenig nachhaltige Ernährung. 

Alle Items, die in die umgekehrte Richtung kodiert sind, werden umgedreht.
```{r}
#| label: invert
ids <- c('v_321', 'v_325', 'v_352_357', 'v_364', 'v_365', 'v_327', 'v_330', 'v_331', 'v_332',
         'v_329', 'v_334', 'v_346', 'v_347', 'v_348', 'v_349', 'v_350', 'v_351', 'v_366')

sust <- sust %>%
  mutate(across(any_of(ids), ~ 1-.))
```


# 2. Psychometrics
```{r}
#| label: na.omit
tmp <- sust %>% na.omit()
```


## 2.1 EFA
```{r}
datamatrix <- cor(tmp[,c(-1)])
corrplot::corrplot(datamatrix, method="number", order='hclust')
```

Faktorisierbarkeit der Daten prüfen:
```{r}
# KMO sollte > .60 sein, damit eine Faktorenanalyse Sinn ergibt 
psych::KMO(r=cor(tmp[,c(-1)]))

# Bartlett’s Test of Sphericity: kleiner p-Wert indiziert, dass eine FA sinnvoll ist
psych::cortest.bartlett(tmp[,c(-1)])

# Determinante sollte positiv sein, damit eine FA problemlos durchläuft
det(cor(tmp[,c(-1)]))
```

Interpretation: https://m-clark.github.io/posts/2020-04-10-psych-explained/

```{r}
efa1 <- psych::fa(r=tmp[,c(-1)], 
 nfactors = 3, 
 max.iter=100, 
 rotate='promax')

efa1_df <- bind_cols(rownames(efa1$loadings), efa1$loadings, efa1$communality, efa1$uniquenesses)
names(efa1_df)[1] <- c('item')
names(efa1_df)[(length(efa1_df)-1):length(efa1_df)] <- c('h2', 'u2')

##### to do: ####
# alle Items einem Faktor zuordnen
#efa1_df2 <- efa1_df %>% 
  
```

```{r}
print(efa1)
```


## 2.2 CFA
= Testen der Hypothese von den drei Bereichen Einstellung, Wissen & Verhalten
```{r}
#| label: cfa
tmp <- tmp %>% select(-lfdn)

### Messmodell aufsetzen
model <- '
  f1_einstellung =~ v_325 + v_352_357 + v_359 + v_364 + v_365
  f2_wissen =~ v_321 + v_327 + v_328 + v_330 + v_331 + v_332 + v_333 + v_360
  f3_verhalten =~ v_329 + v_334 + v_335 + ern_erw + ern_kid + v_346 + v_347 + v_348 + v_349 + v_350 + v_351 + v_366
  '

### CFA
fit <- lavaan::cfa(model=model, data=tmp, std.lv=TRUE, fixed.x=FALSE)
#summary(fit)

tmp2 <- as.data.frame(fitMeasures(fit, c("rmsea", "cfi", "srmr")))

tmp2 %>%  
  tibble::rownames_to_column(., 'Index') %>%
  kbl(booktabs = T,  digits = 4, centering=F, row.names=FALSE, 
      col.names=c('Index', 'Wert'))
```
--> Modell passt noch nicht auf die Daten


```{r}
#| label: faktorladungen
# Datensatz mit Ladungsparametern erstellen:
est <- parameterEstimates(fit, standardized=TRUE) %>% 
  filter(op == "=~") %>% 
  select(Factor=lhs, op, Item=rhs, Standardized=est, ci.lower, ci.upper, SE=se, 'p-value'=pvalue)

load <- left_join(est, items[c('item_nr', 'bereich_neu', 'item')], by=c('Item'='item_nr')) %>% 
  select(bereich_neu, Item, item, Standardized, ci.lower, ci.upper)

load %>% 
  kbl(booktabs = T,  digits = 2, centering=F, row.names=FALSE, 
      col.names=c('Bereich', 'Item_Nr', 'Item', 'Ladung', 'KI untere Grenze', 'KI obere Grenze'), 
      caption = 'Faktorladungen der Items des FLQ') %>%
  kable_styling(latex_options = "HOLD_position", position = "left") %>% 
  column_spec(c(2,3), border_left = F, border_right = T) %>% 
  row_spec(c(0,5,13), extra_css = "border-bottom: 1px solid", hline_after=TRUE) 
```

```{r}
#| label: trennsch & schwierigkeit
#| warning: false
#| message: false

## Itemschwierigkeiten
diffic <- psych::alpha(tmp)[["item.stats"]][["mean"]]/1*100
diffic <- data.frame(diffic)
rownames(diffic) <- colnames(tmp)
diffic <-round(diffic, digits=3)

## Itemtrennschärfen
differ <- psych::alpha(tmp)[["item.stats"]][["r.drop"]]
differ <- data.frame(differ)
rownames(differ) <- (tmp)
differ <- round(differ, digits=3)

tmp2 <- bind_cols(diffic, differ)
tmp2 <- tmp2 %>% tibble::rownames_to_column('item_nr')
tmp2 <- left_join(tmp2, items[c('item_nr', 'bereich_neu', 'item')], by='item_nr') %>% 
  select(item_nr, bereich_neu, item, everything()) %>% 
  arrange(match(bereich_neu, c('Einstellung / Bedeutung', 'Wissen / Fertigkeiten')))

tmp2 %>% 
  kbl(booktabs = T,  digits = 2, centering=F, row.names=FALSE, 
      col.names=c( 'Item_Nr', 'Bereich', 'Item','Itemschwierigkeit', 'Itemtrennschärfe')) %>% 
  kable_styling(latex_options = "HOLD_position", position = "left") %>% 
  column_spec(2, border_left = F, border_right = T) %>% 
  row_spec(c(0,5,13), extra_css = "border-bottom: 1px solid", hline_after=TRUE)
```

# 3. Modifizierte Auswahl
```{r}
#| label: cfa2
### Messmodell aufsetzen
model <- '
  f1_einstellung =~ v_325 + v_364 + v_365
  f2_wissen =~ v_321 + v_327 + v_330 + v_331 + v_332
  f3_verhalten =~ v_329 + v_334 + v_335 + ern_erw + ern_kid + v_346 + v_347 + v_348 + v_349 + v_350 + v_351
  '

# gestrichen:
# v_352_357 + v_359
# v_328, v_360, v_333 (hier evtl. eine andere Kodierung ausprobieren?)
# v_366

### CFA
fit <- lavaan::cfa(model=model, data=tmp, std.lv=TRUE, fixed.x=FALSE)
#summary(fit)

tmp2 <- as.data.frame(fitMeasures(fit, c("rmsea", "cfi", "srmr")))

tmp2 %>%  
  tibble::rownames_to_column(., 'Index') %>%
  kbl(booktabs = T,  digits = 4, centering=F, row.names=FALSE, 
      col.names=c('Index', 'Wert'))
```
--> Modell passt noch nicht auf die Daten


```{r}
#| label: faktorladungen2
# Datensatz mit Ladungsparametern erstellen:
est <- parameterEstimates(fit, standardized=TRUE) %>% 
  filter(op == "=~") %>% 
  select(Factor=lhs, op, Item=rhs, Standardized=est, ci.lower, ci.upper, SE=se, 'p-value'=pvalue)

load <- left_join(est, items[c('item_nr', 'bereich_neu', 'item')], by=c('Item'='item_nr')) %>% 
  select(bereich_neu, Item, item, Standardized, ci.lower, ci.upper)

load %>% 
  kbl(booktabs = T,  digits = 2, centering=F, row.names=FALSE, 
      col.names=c('Bereich', 'Item_Nr', 'Item', 'Ladung', 'KI untere Grenze', 'KI obere Grenze')) %>%
  kable_styling(latex_options = "HOLD_position", position = "left") %>% 
  column_spec(c(2,3), border_left = F, border_right = T) %>% 
  row_spec(c(0,3,8), extra_css = "border-bottom: 1px solid", hline_after=TRUE) 
```

```{r}
#| label: trennsch&schwierigkeit2
#| warning: false
#| message: false
ids <- c('v_325', 'v_364', 'v_365', 'v_321', 'v_327', 'v_330', 'v_331', 'v_332', 'v_329', 'v_334', 'v_335', 'ern_erw', 'ern_kid', 'v_346', 'v_347', 'v_348', 'v_349', 'v_350', 'v_351')

tmp2 <- tmp %>% select(any_of(ids))

## Itemschwierigkeiten
diffic <- psych::alpha(tmp2)[["item.stats"]][["mean"]]/1*100
diffic <- data.frame(diffic)
rownames(diffic) <- colnames(tmp2)
diffic <-round(diffic, digits=3)

## Itemtrennschärfen
differ <- psych::alpha(tmp2)[["item.stats"]][["r.drop"]]
differ <- data.frame(differ)
rownames(differ) <- (tmp2)
differ <- round(differ, digits=3)

tmp2 <- bind_cols(diffic, differ)
tmp2 <- tmp2 %>% tibble::rownames_to_column('item_nr')
tmp2 <- left_join(tmp2, items[c('item_nr', 'bereich_neu', 'item')], by='item_nr') %>% 
  select(item_nr, bereich_neu, item, everything()) %>% 
  arrange(match(bereich_neu, c('Einstellung / Bedeutung', 'Wissen / Fertigkeiten')))

tmp2 %>% 
  kbl(booktabs = T,  digits = 2, centering=F, row.names=FALSE, 
      col.names=c( 'Item_Nr', 'Bereich', 'Item','Itemschwierigkeit', 'Itemtrennschärfe')) %>% 
  kable_styling(latex_options = "HOLD_position", position = "left") %>% 
  column_spec(2, border_left = F, border_right = T) %>% 
  row_spec(c(0,3,8), extra_css = "border-bottom: 1px solid", hline_after=TRUE)
```


