---
title: "Score Nachhaltige Ernährung"
author: "IGES Institut"
format: html
editor: visual
---

```{r setup}
#| message: false
#| warning: false
library(tidyverse)
library(haven) #Einlesen von .sav oder .dta
library(xlsx)
library(knitr)
library(kableExtra)
```


# 0. Prep
```{r data}
# Datensatz mit Meta-Infos zu den Items
items <- read.xlsx('./data/Items.xlsx', sheetIndex = 1)


# Daten aus AOK-Familienstudie
overall_dat <- read_dta('./data/AOK_Datensatz.dta')
#names(overall_dat)

dat <- overall_dat %>% select(lfdn, v_309:v_318, 
                              contains('Ernährungskompetenz'), 
                              v_319:v_371)
```

Vorgehen: 

* zunächst werden Punkte gemäß der jeweiligen Skala vergeben
* im nächsten Schritt werden Items auf eine gemeinsame Skala zwischen 0 & 1 transformiert (siehe hierfür https://www.ibm.com/support/pages/transforming-different-likert-scales-common-scale)
* der Nachhaltigkeitsscore wird für jede Person von 0 bis 100 ausgegeben


```{r sust}
# Itemauswahl
items_auswahl <- items %>% filter(eignung_score %in% c('ja', 'vielleicht')) %>% na.omit()
sust <- dat %>% select(lfdn, any_of(items_auswahl$item_nr))
```





# 1. Score bilden

## 1.1 Kodierung einzelner Bereiche
Punkte für die jeweiligen Antworten vergeben --> Sortierung nach Bereichen (ersteinmal so wie sie in der Auswahl vom 28.10. festegelgt wurden)

### 1.1.1 Einstellung / Bedeutung

```{r kodierung_einstellung}
# Diagnostik von haven_labelled-Objekten
# check <- labelled::look_for(tmp)

### Frage 7.2: Welche Aspekte sind Ihnen am Essen am wichtigsten?
tmp <- sust %>% select(v_322:v_326) %>% 
  mutate_all(as.factor) %>% 
  mutate_all(~ na_if(., 6)) %>% 
  select(-v_322, -v_323, -v_324, -v_326)

sust$v_325[sust$v_325 == 6] <- NA


### Frage 7.9: Welche Hindernisse für klimafreundliche Ernährung? (invertiert)
tmp <- sust %>% select(v_352:v_358) %>% 
  mutate_all(as.factor)

sust <- sust %>% 
  mutate(v_352_357 = rowSums(select(., v_352:v_357)),
         v_352_357 = ifelse(v_352_357==0 & v_358==0, NA, v_352_357)) %>% 
  select(-(v_352:v_358))


### restliche Items ohne Veränderungen
ids <- c('v_359', 'v_364', 'v_365')

sust <- sust %>% 
  mutate_all(as.numeric) %>%
  mutate(across(any_of(ids), ~na_if(.,0)))
```


### 1.1.2 Wissen /Fertigkeiten
```{r kodierung_wissen}
### Frage 7.4: klimaschädlichstes Lebensmittel (Wissensfrage)
#labelled::look_for(sust)
sust <- sust %>% mutate(
  v_333 = case_when(
    v_333 == 1 ~ 3, 
    v_333 %in% c(2,3,5) ~ 2, 
    v_333 == 4 ~ 1, 
    v_333 == 0 ~ as.double(NA)
  )
)

### restliche Items ohne Verädnerungen
ids <- c('v_321', 'v_327', 'v_328', 'v_330', 'v_331', 'v_332', 'v_360')

sust <- sust %>% 
  mutate(across(any_of(ids), ~na_if(.,0)))
```



### 1.1.3 Verhalten
```{r kodierung_verhalten}
### Frage 7.7: Wie ernähren Sie sich und ihr Kind?
tmp <- sust %>% select(v_336:v_345) %>% 
  mutate_all(as.factor) 

sust <- sust %>% mutate(
  ern_erw = case_when(
    v_336 == 1 ~ 1,
    v_338 == 1 ~ 2,
    v_340 == 1 ~ 3,
    v_342 == 1 ~ 4,
    v_344 == 1 ~ 5,
  ), 
    ern_kid = case_when(
    v_337 == 1 ~ 1,
    v_339 == 1 ~ 2,
    v_341 == 1 ~ 3,
    v_343 == 1 ~ 4,
    v_345 == 1 ~ 5,
  ),
) %>% 
  select(-(v_336:v_345))


### restliche Items ohne Veränderungen
ids <- c('v_329', 'v_334', 'v_335', 'v_346', 'v_347', 'v_348', 'v_349', 'v_350', 'v_351', 'v_366')

sust <- sust %>% 
  mutate(across(any_of(ids), ~na_if(.,0)))
```


##### TO DO!!!
```{r diag}
check <- dlookr::diagnose(sust)
check <- dlookr::diagnose_numeric(sust)
```


## 1.2 Transformation & Invertierung
**Transformation** <br>
Da die Items auf Antwortskalen mit unterschiedlich vielen Ausprägungen zu beantworten sind, müssen diese vor einer Zusammenführung zunächst auf eine einheitliche Skala transformiert werden. Dabei soll die minmale Ausprägung 0 und die maximale Ausprägung 1 sein. 

```{r transformation}
transform_scale <- function(x) {
  (x - min(x, na.rm = TRUE)) /  (max(x, na.rm=TRUE) - min(x, na.rm = TRUE))
}

sust <- sust %>% 
  mutate_all(as.numeric) %>% 
  mutate(across(v_321:ern_kid, transform_scale))

### check
check <- dlookr::diagnose(sust)
check <- dlookr::diagnose_numeric(sust)
```


**Invertierung** <br>
Die Items sollen so kodiert sein, dass ein hoher numerischer Wert (Max 1) mit maximal nachhaltiger Ernährung einhergeht. Ein niedriger Wert (Min 0) bedeutet umgekehrt eine wenig nachhaltige Ernährung. 
```{r invert}
ids <- c('v_359', 'v_352_357', 'v_360')

sust <- sust %>%
  mutate(across(any_of(ids), ~ 1-.))
```


# 2. Psychometrics
```{r pca}
tmp <- sust %>% na.omit()

pca <- prcomp(tmp[,c(2:length(tmp))], center = TRUE,scale. = TRUE)
summary(pca)

# library(devtools)
# #install_github("vqv/ggbiplot")
# 
# library(ggbiplot)
# ggbiplot(pca)
```

```{r efa}
library(corrplot)

datamatrix <- cor(tmp[,c(-1)])
corrplot(datamatrix, method="number")
```


